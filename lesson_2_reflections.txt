What happens when you initialize a repository? Why do you need to do it?

	To add the metadata to git . To let know git that it has to track these files.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	Working directory files are not tracked by git. But once files are added to staging area, they are tracked by git. It helps git to find out 
	which files belong to the repository.

How can you use the staging area to make sure you have one commit per logical change?

	To add only those files to staging area whose are associated with the logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When we want to make certain experimental or private changes to a branch.

How do the diagrams help you visualize the branch structure?

	It clears that what is the commit structure going on as.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The commits from the two branches are merged together. To represent such that to show that all commits from both of the branches are merged.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	Automattic merging is beeter as it commits all the unproblematic areas and raises problems for committed areas.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	Because you do not want your local work to mess up until finalized with the remote work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

fork is bascially making a copy of another one's repository on Github servers.
Clones is bascially cloning changes from one repository located to your local computer.
branches is basically locally creating different copies of experimental code.

